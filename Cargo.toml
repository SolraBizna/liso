[workspace]
members = [".", "examples/fight"]

[package]
name = "liso"
version = "1.3.0"
description = "Line Input with Simultaneous Output: input lines are editable, output lines are never scrambled, and all of it thread safe."
authors = ["Solra Bizna <solra@bizna.name>"]
edition = "2021"
repository = "https://github.com/SolraBizna/liso"
license = "MIT OR Apache-2.0"
keywords = ["readline", "command-line", "line-editing"]
categories = ["command-line-interface"]

[dependencies]
bitflags = "2.5.0"
crossterm = "0.27.0"
errno = {version = "0.3.8", optional = true}
libc = {version = "0.2.144", optional = true}
parking_lot = {version = "0.12.2", optional = true}
serde = { version = "1.0", optional = true, features = ["derive"] }
tokio = {version = "1.37.0", default-features = false, features = ["rt", "sync", "time"]}
textwrap = {version = "0.16.1", optional = true}
unicode-width = "0.1.12"

[target.'cfg(unix)'.dependencies]
libc = {version = "0.2.144"}

[features]
default = ["wrap", "history", "completion", "global"]
# Best-effort attempt to capture stderr and route it through liso. Not a
# supported feature. Experimental.
capture-stderr = ["dep:libc", "dep:errno", "dep:parking_lot"]
# Tab-completion support.
completion = []
# Global `output()` function and `println!`/`wrapln!` macros. No plumbing
# required.
global = ["dep:parking_lot"]
# History support.
history = []
# derive Serialize and Deserialize for Line, LineElement, Color, and Style
serde = ["dep:serde", "bitflags/serde"]
# `wrapln()` function.
wrap = ["dep:textwrap"]
